#user  nobody;
worker_processes  4;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
error_log  logs/error.log  info;

pid        logs/nginx.pid;
worker_rlimit_nofile 51200;


events {
    use epoll;
    worker_connections  51200;
}

#切换自动推送(多 worker 直播流)模式。默认为 off
rtmp_auto_push on;

#当 worker 被干掉时设置自动推送连接超时时间。默认为 100 毫秒
rtmp_auto_push_reconnect 1s;

#设置用于流推送的 UNIX 域套接字目录。默认为 /tmp
#rtmp_socket_dir /var/sock;

rtmp {
    server {
            listen 1935;

        #点播配置
                application vod {
                    play /opt/media/nginxrtmp/flv;
                }
        
        #直播流配置
            application live {
                    live on;
            #为 rtmp 引擎设置最大连接数。默认为 off
            max_connections 1024;

                    # default recorder
                    record all;
                    record_path /var/rec;
 
                    recorder audio {
                         record audio;
                         record_suffix -%d-%b-%y-%T.flv;
                    } 

                    recorder chunked {
                        record all;
                         record_interval 15s;
                         record_path /var/rec/chunked;
                    }

            #on_publish http://localhost:8080/publish;  
            #on_play http://localhost:8080/play;  
            #on_record_done http://localhost:8080/record_done;
            
            #rtmp日志设置
             #access_log logs/rtmp_access.log new;
             #access_log logs/rtmp_access.log;
             #access_log off;

             }
        
        #HLS协议支持
        #application hls {  
            #live on;  
            #hls on;  
            #hls_path /tmp/app;  
            #hls_fragment 5s;  
        #} 

            application hls{
        
                    live on;
                    hls on;
                    hls_path /usr/local/nginx/html/app;
                    hls_fragment 1s;
            }
 

        }
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}

    location /rtmp-publisher {  
        root /root/nginx/nginx-rtmp-module/test;  
    }  

    #location /hls {  
        #server hls fragments  
        #types{  
            #application/vnd.apple.mpegurl m3u8;  
            #video/mp2t ts;  
        #}
  
        #alias /usr/local/nginx/html;  
        #expires -1;  
    #}

    location /hls {
         #server hls fragments
              types{
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
              }

             #alias /usr/local/nginx/html/app;
         alias /usr/local/nginx/html;
             expires -2;
         }  

    location / {  
        #root /root/nginx/nginx-rtmp-module/test/rtmp-publisher;  
        types{  
          application/vnd.apple.mpegurl m3u8;  
          video/mp2t ts;  
        }
  
        root /usr/local/nginx/html/rtmp-publisher;  
        expires -1;  
    }  

    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    #支持flv
    server
        {
            listen       8081;
            server_name localhost;
            #root /opt/pub/media/nginx; #http协议时候，flv视频位置
        #root /root/nginx/nginx-rtmp-module/test/www;
            root /usr/local/nginx/html/www;

            location ~ .*.(flv|swf|mp4|wma|wmv)$ {
                    valid_referers none blocked *.xxxx.com http://localhost;
                    if ($invalid_referer) {
                    return 403;
                    }
            }
            location ~ \.flv$ {
                    flv;
                    #limit_conn one 20;#限制客户端并发连接数
                    limit_rate 200k;#限制每客户端最大带宽
            }
            location ~ \.mp4$ {
                    flv;
                    #limit_conn one 20;
                    limit_rate 200k;
            }
            #access_log  logs/nginxflv_access.log  main;
        }

    server
        {
            listen       8082;
            server_name localhost;
            index index.html;
            location / {
                #root /opt/pub/media/nginx-rtmp;
        root /root/nginx/nginx-rtmp-module/test/rtmp-publisher;
            }
            #access_log  logs/nginxrtmpflv_access.log  main;
        }

    server {
        listen      8080;
		server_name localhost;
		index player.html;

        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet /root/nginx/nginx-rtmp-module/stat.xsl;
        }
        location /stat.xsl {
            root /root/nginx/nginx-rtmp-module;
        }

        location /rtmp-publisher {  
            root /usr/local/nginx/html/test/rtmp-publisher;  
        }  

        location / {
            root /root/nginx/nginx-rtmp-module/test/rtmp-publisher;
        }
    }

}